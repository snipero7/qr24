// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  passwordHash String
  role         Role     @default(ADMIN)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum Role {
  ADMIN
  TECH
  CLERK
}

model Customer {
  id        String   @id @default(cuid())
  name      String
  phone     String   @unique
  notes     String?
  orders    Order[]
  createdAt DateTime @default(now())
}

model Order {
  id             String       @id @default(cuid())
  code           String       @unique
  customer       Customer     @relation(fields: [customerId], references: [id])
  customerId     String
  deviceModel    String?
  imei           String?
  service        String
  originalPrice  Decimal      @default(0)
  collectedPrice Decimal?
  status         OrderStatus  @default(NEW)
  collectedAt    DateTime?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  statusLogs     OrderStatusLog[]
  receiptUrl     String?
}

enum OrderStatus {
  NEW
  IN_PROGRESS
  WAITING_PARTS
  READY
  DELIVERED
  CANCELED
}

model OrderStatusLog {
  id      String      @id @default(cuid())
  order   Order       @relation(fields: [orderId], references: [id])
  orderId String
  from    OrderStatus?
  to      OrderStatus
  at      DateTime    @default(now())
  note    String?
}

model Debt {
  id        String      @id @default(cuid())
  shopName  String
  service   String
  amount    Decimal
  status    DebtStatus  @default(OPEN)
  notes     String?
  createdAt DateTime    @default(now())
  payments  DebtPayment[]
}

enum DebtStatus {
  OPEN
  PARTIAL
  PAID
}

model DebtPayment {
  id     String   @id @default(cuid())
  debt   Debt     @relation(fields: [debtId], references: [id])
  debtId String
  amount Decimal
  at     DateTime @default(now())
}
